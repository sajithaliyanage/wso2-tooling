/**
 *
 * $Id$
 */
package org.wso2.developerstudio.eclipse.ds.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.wso2.developerstudio.eclipse.ds.CustomValidator;
import org.wso2.developerstudio.eclipse.ds.DoubleRangeValidator;
import org.wso2.developerstudio.eclipse.ds.LengthValidator;
import org.wso2.developerstudio.eclipse.ds.LongRangeValidator;
import org.wso2.developerstudio.eclipse.ds.PatternValidator;

/**
 * A sample validator interface for {@link org.wso2.developerstudio.eclipse.ds.QueryParameter}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface QueryParameterValidator {
	boolean validate();

	boolean validateMixed(FeatureMap value);
	boolean validateValidateLongRange(LongRangeValidator value);
	boolean validateValidateDoubleRange(DoubleRangeValidator value);
	boolean validateValidateLength(LengthValidator value);
	boolean validateValidatePattern(EList<PatternValidator> value);
	boolean validateValidateCustom(EList<CustomValidator> value);
	boolean validateDefaultValue(String value);
	boolean validateName(String value);
	boolean validateOrdinal(int value);
	boolean validateParamType(String value);
	boolean validateSqlType(String value);
	boolean validateStructType(String value);
	boolean validateType(String value);
}
